name: Deploy Coinbase Service

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options: [dev, uat, prod]

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set environment
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "ENVIRONMENT=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=dev" >> $GITHUB_ENV
          fi

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy infrastructure
        run: |
          aws cloudformation deploy \
            --template-file deployment/cloudformation/template.yaml \
            --stack-name coinbase-service-${{ env.ENVIRONMENT }} \
            --parameter-overrides \
              Environment=${{ env.ENVIRONMENT }} \
              BaseStackName=coinbase-base-${{ env.ENVIRONMENT }} \
              GitHubRepo=${{ github.server_url }}/${{ github.repository }} \
              GitHubBranch=${{ github.ref_name }} \
            --capabilities CAPABILITY_IAM CAPABILITY_NAMED_IAM

      - name: Trigger App Runner deployment
        run: |
          echo "üöÄ Triggering App Runner deployment..."
          SERVICE_ARN=$(aws apprunner list-services \
            --query "ServiceSummaryList[?ServiceName=='coinbase-service-${{ env.ENVIRONMENT }}'].ServiceArn" \
            --output text)

          if [ -n "$SERVICE_ARN" ]; then
            aws apprunner start-deployment --service-arn $SERVICE_ARN
            echo "‚úÖ Deployment triggered for service: $SERVICE_ARN"
          else
            echo "‚ö†Ô∏è  Service not found, it may be newly created and will deploy automatically"
          fi

      - name: Get deployment URLs
        run: |
          echo "üöÄ Deployment to ${{ env.ENVIRONMENT }} complete!"

          # Wait a moment for stack to be ready
          sleep 10

          CLOUDFRONT_URL=$(aws cloudformation describe-stacks \
            --stack-name coinbase-service-${{ env.ENVIRONMENT }} \
            --query 'Stacks[0].Outputs[?OutputKey==`CloudFrontURL`].OutputValue' \
            --output text)

          APP_RUNNER_URL=$(aws cloudformation describe-stacks \
            --stack-name coinbase-service-${{ env.ENVIRONMENT }} \
            --query 'Stacks[0].Outputs[?OutputKey==`AppRunnerServiceUrl`].OutputValue' \
            --output text)

          echo "üì° Protected API URL: $CLOUDFRONT_URL"
          echo "üîó Direct App Runner URL: $APP_RUNNER_URL"
          echo "üîç Test: $CLOUDFRONT_URL/health"
